"use strict";(self.webpackChunkharlequin_oss_docs=self.webpackChunkharlequin_oss_docs||[]).push([[793],{1868:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"configuration/browsers","title":"Browser catalog format","description":"File structure","source":"@site/docs/configuration/browsers.md","sourceDirName":"configuration","slug":"/configuration/browsers","permalink":"/docs/configuration/browsers","draft":false,"unlisted":false,"editUrl":"https://github.com/selebrow/selebrow-website/tree/main/docs/configuration/browsers.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0,"toc_max_heading_level":4,"slug":"browsers"},"sidebar":"tutorialSidebar","previous":{"title":"UI","permalink":"/docs/concepts/ui"},"next":{"title":"Parameters","permalink":"/docs/configuration/parameters"}}');var o=s(4848),i=s(8453);const a={sidebar_position:0,toc_max_heading_level:4,slug:"browsers"},l="Browser catalog format",c={},t=[{value:"File structure",id:"file-structure",level:2},{value:"Browser",id:"browser",level:2},{value:"Flavor",id:"flavor",level:2},{value:"Browser options",id:"browser-options",level:2},{value:"<code>image</code>",id:"image",level:3},{value:"<code>versionTags</code>",id:"versiontags",level:3},{value:"<code>defaultVersion</code>",id:"defaultversion",level:3},{value:"<code>cmd</code>",id:"cmd",level:3},{value:"<code>env</code>",id:"env",level:3},{value:"<code>ports</code>",id:"ports",level:3},{value:"<code>path</code>",id:"path",level:3},{value:"<code>limits</code>",id:"limits",level:3},{value:"<code>labels</code>",id:"labels",level:3},{value:"<code>shmSize</code>",id:"shmsize",level:3},{value:"<code>tmpfs</code>",id:"tmpfs",level:3}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"browser-catalog-format",children:"Browser catalog format"})}),"\n",(0,o.jsx)(r.h2,{id:"file-structure",children:"File structure"}),"\n",(0,o.jsx)(r.p,{children:"The browser catalog is a YAML file of the following format:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"playwright:\n  <browser>:\n    images:\n      <flavor>:\n        [browser options...]\nwebdriver:\n  <browser>:\n    images:\n      <flavor>:\n        [browser options...]\n"})}),"\n",(0,o.jsx)(r.h2,{id:"browser",children:"Browser"}),"\n",(0,o.jsxs)(r.p,{children:["You can configure as many browsers as you want. See how to request specific browser in ",(0,o.jsx)(r.a,{href:"/docs/usage/webdriver/",children:"Webdriver"}),"\nor ",(0,o.jsx)(r.a,{href:"/docs/usage/playwright/",children:"Playwright"})," sessions."]}),"\n",(0,o.jsx)(r.h2,{id:"flavor",children:"Flavor"}),"\n",(0,o.jsxs)(r.p,{children:["Flavor is a way to have different images of the same browser. For example you can build images containing some additional binary components like plugins. By default Selebrow will look for images defined with ",(0,o.jsx)(r.code,{children:"default"})," flavor.\nYou can request a specific flavor in Webdriver or Playwright session requests."]}),"\n",(0,o.jsx)(r.h2,{id:"browser-options",children:"Browser options"}),"\n",(0,o.jsx)(r.h3,{id:"image",children:(0,o.jsx)(r.code,{children:"image"})}),"\n",(0,o.jsx)(r.p,{children:"Image reference (without tag) for browser container."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"image: selebrow/selebrow-images/playwright/chrome\n"})}),"\n",(0,o.jsx)(r.h3,{id:"versiontags",children:(0,o.jsx)(r.code,{children:"versionTags"})}),"\n",(0,o.jsx)(r.p,{children:"Mapping of the browser versions to actual image tags."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"versionTags:\n  '133.0': v0.4.0-133.0\n  '134.0': v0.4.0-134.0\n  '135.0': v0.4.1-135.0\n  '136.0': v0.4.5-136.0\n"})}),"\n",(0,o.jsxs)(r.p,{children:["See how to request specific browser version in ",(0,o.jsx)(r.a,{href:"/docs/usage/webdriver/",children:"Webdriver"})," or ",(0,o.jsx)(r.a,{href:"/docs/usage/playwright/",children:"Playwright"})," sessions."]}),"\n",(0,o.jsx)(r.h3,{id:"defaultversion",children:(0,o.jsx)(r.code,{children:"defaultVersion"})}),"\n",(0,o.jsxs)(r.p,{children:["Default browser version to use in ",(0,o.jsx)(r.a,{href:"#versiontags",children:"versionTags"})," when no specific version was requested."]}),"\n",(0,o.jsx)(r.h3,{id:"cmd",children:(0,o.jsx)(r.code,{children:"cmd"})}),"\n",(0,o.jsx)(r.p,{children:"Browser container command line."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"cmd:\n  - sh\n  - /entrypoint.sh \n"})}),"\n",(0,o.jsx)(r.h3,{id:"env",children:(0,o.jsx)(r.code,{children:"env"})}),"\n",(0,o.jsx)(r.p,{children:"Environment variables to be injected into the browser container."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"env:\n  LANG: en_US.UTF-8\n  LANGUAGE: en_US:es\n  TZ: America/Chicago\n"})}),"\n",(0,o.jsxs)(r.p,{children:["See how to override or set environment variables in ",(0,o.jsx)(r.a,{href:"/docs/usage/webdriver/",children:"Webdriver"})," or ",(0,o.jsx)(r.a,{href:"/docs/usage/playwright/",children:"Playwright"})," sessions."]}),"\n",(0,o.jsx)(r.h3,{id:"ports",children:(0,o.jsx)(r.code,{children:"ports"})}),"\n",(0,o.jsx)(r.p,{children:"Defines actual port numbers as exposed by the image"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"ports:\n  browser: 4444     # Mandatory: Main port for Webdriver or Playwright server\n  vnc: 5900         # VNC port (used when VNC is enabled)\n  clipboard: 9090   # Webdriver only: port for clipboard service\n  devtools: 7070    # Webdriver only: port for devtools service\n  fileserver: 8080  # Webdriver only: port for fileserver service\n"})}),"\n",(0,o.jsxs)(r.p,{children:["See how to enable VNC in ",(0,o.jsx)(r.a,{href:"/docs/usage/webdriver/",children:"Webdriver"})," or ",(0,o.jsx)(r.a,{href:"/docs/usage/playwright/",children:"Playwright"})," sessions."]}),"\n",(0,o.jsx)(r.h3,{id:"path",children:(0,o.jsx)(r.code,{children:"path"})}),"\n",(0,o.jsx)(r.p,{children:"HTTP request path prefix to be added to every Webdriver/Playwright request when forwarding requests to browser port"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"path: /wd/hub\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Also see ",(0,o.jsx)(r.a,{href:"#ports",children:"ports"})]}),"\n",(0,o.jsx)(r.h3,{id:"limits",children:(0,o.jsx)(r.code,{children:"limits"})}),"\n",(0,o.jsxs)(r.p,{children:["Resource limits for browser containers (applies to both Kubernetes and Docker backends). For the Kubernetes backend the same values are also used for container ",(0,o.jsx)(r.a,{href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits",children:"requests"})]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"limits:\n  cpu: '1'\n  memory: 2Gi\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Only ",(0,o.jsx)(r.code,{children:"cpu"})," and ",(0,o.jsx)(r.code,{children:"memory"})," resources are supported at the moment. The value must be in the ",(0,o.jsx)(r.a,{href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes",children:"Kubernetes quantity type"})," format."]}),"\n",(0,o.jsx)(r.h3,{id:"labels",children:(0,o.jsx)(r.code,{children:"labels"})}),"\n",(0,o.jsx)(r.p,{children:"Labels to be assigned to browser's Docker container or Kubernetes pod"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"labels:\n  label1: value1\n  label-2: value-2\n"})}),"\n",(0,o.jsx)(r.h3,{id:"shmsize",children:(0,o.jsx)(r.code,{children:"shmSize"})}),"\n",(0,o.jsx)(r.p,{children:"Applies to Docker backend only."}),"\n",(0,o.jsxs)(r.p,{children:["Shared memory size in bytes for browser's Docker container.\nCorresponds to Docker ",(0,o.jsx)(r.a,{href:"https://docs.docker.com/engine/containers/run/#runtime-constraints-on-resources",children:"--shm-size run parameter"})]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"shmSize: 2147483648  # 2GB of shared memory\n"})}),"\n",(0,o.jsx)(r.h3,{id:"tmpfs",children:(0,o.jsx)(r.code,{children:"tmpfs"})}),"\n",(0,o.jsx)(r.p,{children:"Applies to Docker backend only."}),"\n",(0,o.jsxs)(r.p,{children:["Tmpfs mounts for browser's Docker container.\nCorresponds to Docker ",(0,o.jsx)(r.a,{href:"https://docs.docker.com/engine/storage/tmpfs/",children:"--tmpfs run parameter"})]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:'tmpfs:\n  - /tmp\n  - "/var/tmp:nodev"  # mount options are also supported\n'})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>l});var n=s(6540);const o={},i=n.createContext(o);function a(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);