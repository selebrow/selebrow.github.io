"use strict";(self.webpackChunkharlequin_oss_docs=self.webpackChunkharlequin_oss_docs||[]).push([[646],{8003:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"concepts/backend","title":"Backend","description":"Selebrow utilizes various runtime environments to manage browser containers, these environments are referred to as \\"backends\\".","source":"@site/docs/concepts/backend.md","sourceDirName":"concepts","slug":"/concepts/backend","permalink":"/docs/concepts/backend","draft":false,"unlisted":false,"editUrl":"https://github.com/selebrow/selebrow-website/tree/main/docs/concepts/backend.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"URL parameters","permalink":"/docs/usage/playwright/url-parameters"},"next":{"title":"Browser catalog","permalink":"/docs/concepts/catalog"}}');var s=t(4848),o=t(8453);const i={sidebar_position:0},a="Backend",c={},d=[{value:"Docker",id:"docker",level:2},{value:"Network and port mapping",id:"network-and-port-mapping",level:3},{value:"Kubernetes",id:"kubernetes",level:2},{value:"Pod template",id:"pod-template",level:3},{value:"In Cluster mode",id:"in-cluster-mode",level:3},{value:"Out of cluster mode",id:"out-of-cluster-mode",level:3}];function l(e){const r={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"backend",children:"Backend"})}),"\n",(0,s.jsxs)(r.p,{children:['Selebrow utilizes various runtime environments to manage browser containers, these environments are referred to as "backends".\nYou can specify which backend to use by setting the ',(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#backend",children:"backend"})," parameter.\nBy default Selebrow tries to identify the most suitable backend for your setup."]}),"\n",(0,s.jsx)(r.h2,{id:"docker",children:"Docker"}),"\n",(0,s.jsxs)(r.p,{children:["When the Docker backend is enabled every browser request starts a new Docker container (unless ",(0,s.jsx)(r.a,{href:"/docs/concepts/pooling",children:"pooling"})," is enabled).\nFor detailed configuration options, please refer to the ",(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#docker-parameters",children:"Docker parameters reference"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"network-and-port-mapping",children:"Network and port mapping"}),"\n",(0,s.jsxs)(r.p,{children:["If Selebrow is started on the host machine it communicates with the browser containers by ",(0,s.jsx)(r.a,{href:"https://docs.docker.com/get-started/docker-concepts/running-containers/publishing-ports/#publishing-to-ephemeral-ports",children:"publishing ephemeral ports"}),".\nThis mode is referred to as port mapping mode; see the ",(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#docker-port-mapping",children:"docker-port-mapping parameter"})," description for specific details."]}),"\n",(0,s.jsxs)(r.p,{children:["If you run Selebrow within a Docker container it communicates directly with the browser containers and must",(0,s.jsx)(r.br,{}),"\n","be connected to the configured ",(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#docker-network",children:"Docker network"}),". If you do not specify\nthe Docker network explicitly, Selebrow will try to detect its network by inspecting its own Docker container."]}),"\n",(0,s.jsx)(r.h2,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,s.jsxs)(r.p,{children:["When the Kubernetes backend is enabled each browser request starts a new Kubernetes pod, unless ",(0,s.jsx)(r.a,{href:"/docs/concepts/pooling",children:"pooling"})," is enabled.\nFor detailed configuration options, please refer to the ",(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#kubernetes-parameters",children:"Kubernetes parameters reference"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"pod-template",children:"Pod template"}),"\n",(0,s.jsxs)(r.p,{children:["The browser Pod manifest is generated using the configured Pod template.\nThis process is akin to ",(0,s.jsx)(r.a,{href:"https://helm.sh/",children:"Helm chart templates"}),", but here a single template file is used (",(0,s.jsx)(r.a,{href:"/docs/configuration/templates#pod-templateyaml",children:"pod-template.yaml"}),") which is rendered using values from ",(0,s.jsx)(r.a,{href:"/docs/configuration/templates#valuesyaml",children:"values.yaml"})," each time a new browser pod is launched.\nThis approach offers the flexibility to customize the browser pod to suit your needs, such as adding metadata, volumes, or sidecar containers.\nFor more information, please see the ",(0,s.jsx)(r.a,{href:"/docs/configuration/templates",children:"templates reference"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"in-cluster-mode",children:"In Cluster mode"}),"\n",(0,s.jsxs)(r.p,{children:["If the Selebrow service itself is started inside a Kubernetes Pod (which is recommended) it expects that its Pod has mounted a ServiceAccount's API credentials. These credentials must have the following permissions for the ",(0,s.jsx)(r.code,{children:"pods"})," resources:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"- create\n- get\n- list\n- watch\n- delete\n"})}),"\n",(0,s.jsx)(r.p,{children:"In this mode Selebrow communicates directly to browser Pod IPs and ports over the Kubernetes network."}),"\n",(0,s.jsx)(r.h3,{id:"out-of-cluster-mode",children:"Out of cluster mode"}),"\n",(0,s.jsxs)(r.p,{children:["For debugging purposes you may want to start Selebrow service outside the Kubernetes cluster.\nThis mode can be enabled using the ",(0,s.jsx)(r.a,{href:"/docs/configuration/parameters#kube-cluster-mode-out",children:"kube-cluster-mode-out parameter"}),".\nIn this case you need to have a ",(0,s.jsx)(r.a,{href:"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/",children:"kubeconfig"})," with access to the namespace where you want Selebrow to create browser pods. This mode is not recommended for production use because of unreliable Kubernetes Pod port forwarding, which is used to communicate with browser Pods."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var n=t(6540);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);