"use strict";(self.webpackChunkharlequin_oss_docs=self.webpackChunkharlequin_oss_docs||[]).push([[761],{3265:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"configuration/parameters","title":"Parameters","description":"Every command-line parameter corresponds to an environment variable which you can set instead.","source":"@site/docs/configuration/parameters.md","sourceDirName":"configuration","slug":"/configuration/parameters","permalink":"/docs/configuration/parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/selebrow/selebrow-website/tree/main/docs/configuration/parameters.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Parameters"},"sidebar":"tutorialSidebar","previous":{"title":"Browser catalog format","permalink":"/docs/configuration/browsers"},"next":{"title":"Templates","permalink":"/docs/configuration/templates"}}');var s=n(4848),l=n(8453);const o={sidebar_position:1,title:"Parameters"},d=void 0,t={},c=[{value:"Common parameters",id:"common-parameters",level:2},{value:"<code>listen</code>",id:"listen",level:3},{value:"<code>backend</code>",id:"backend",level:3},{value:"<code>create-timeout</code>",id:"create-timeout",level:3},{value:"<code>connect-timeout</code>",id:"connect-timeout",level:3},{value:"Browsers catalog parameters",id:"browsers-catalog-parameters",level:2},{value:"<code>browsers-uri</code>",id:"browsers-uri",level:3},{value:"<code>fallback-browsers-uri</code>",id:"fallback-browsers-uri",level:3},{value:"Kubernetes parameters",id:"kubernetes-parameters",level:2},{value:"<code>create-retries</code>",id:"create-retries",level:3},{value:"<code>kube-cluster-mode-out</code>",id:"kube-cluster-mode-out",level:3},{value:"<code>kube-config</code>",id:"kube-config",level:3},{value:"<code>kube-templates-path</code>",id:"kube-templates-path",level:3},{value:"<code>namespace</code>",id:"namespace",level:3},{value:"Docker parameters",id:"docker-parameters",level:2},{value:"<code>docker-platform</code>",id:"docker-platform",level:3},{value:"<code>docker-network</code>",id:"docker-network",level:3},{value:"<code>docker-port-mapping</code>",id:"docker-port-mapping",level:3},{value:"<code>docker-privileged</code>",id:"docker-privileged",level:3},{value:"<code>docker-pull-images</code>",id:"docker-pull-images",level:3},{value:"Browser limit and queue parameters",id:"browser-limit-and-queue-parameters",level:2},{value:"<code>quota-limit</code>",id:"quota-limit",level:3},{value:"<code>queue-size</code>",id:"queue-size",level:3},{value:"<code>queue-timeout</code>",id:"queue-timeout",level:3},{value:"Pool parameters",id:"pool-parameters",level:2},{value:"<code>pool-max-idle</code>",id:"pool-max-idle",level:3},{value:"<code>pool-idle-timeout</code>",id:"pool-idle-timeout",level:3},{value:"<code>pool-max-age</code>",id:"pool-max-age",level:3},{value:"UI parameters",id:"ui-parameters",level:2},{value:"<code>ui</code>",id:"ui",level:3},{value:"<code>vnc-password</code>",id:"vnc-password",level:3},{value:"Logging parameters",id:"logging-parameters",level:2},{value:"<code>SB_LOG_LEVEL</code>",id:"sb_log_level",level:3},{value:"<code>SB_LOG_FORMAT</code>",id:"sb_log_format",level:3},{value:"<code>SB_LOG_OUTPUT</code>",id:"sb_log_output",level:3}];function a(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["Every command-line parameter corresponds to an environment variable which you can set instead.\nFor example, for ",(0,s.jsx)(r.code,{children:"--param-name"})," there is the ",(0,s.jsx)(r.code,{children:"SB_PARAM_NAME"})," environment variable. Environment variable names are\ncreated by adding the ",(0,s.jsx)(r.code,{children:"SB_"})," prefix to the capitalized parameter name, with all dashes (",(0,s.jsx)(r.code,{children:"-"}),") replaced by underscores (",(0,s.jsx)(r.code,{children:"_"}),")."]}),"\n",(0,s.jsx)(r.h2,{id:"common-parameters",children:"Common parameters"}),"\n",(0,s.jsx)(r.h3,{id:"listen",children:(0,s.jsx)(r.code,{children:"listen"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"0.0.0.0:4444"})," when Selebrow is started in Kubernetes or Docker container and ",(0,s.jsx)(r.code,{children:"127.0.0.1:4444"})," otherwise."]}),"\n",(0,s.jsx)(r.p,{children:"(Optional) IP and port for Selebrow to listen on. Below are few valid examples"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"0.0.0.0:4444"})," - bind to all interfaces, listen on port 4444"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":4444"})," - same as above"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"127.0.0.1:4444"})," - bind to 127.0.0.1 (loopback interface) only, listen on port 4444"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"backend",children:(0,s.jsx)(r.code,{children:"backend"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"auto"})]}),"\n",(0,s.jsx)(r.p,{children:"Backend to use, allowed values are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"auto"})," (default)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"kubernetes"})," (see Kubernetes)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"docker"})," (see Docker)"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["When this parameter is set to ",(0,s.jsx)(r.code,{children:"auto"})," or not specified, the Kubernetes backend will be selected if Selebrow was started inside a Kubernetes pod. Otherwise the Docker backend will be used."]}),"\n",(0,s.jsx)(r.h3,{id:"create-timeout",children:(0,s.jsx)(r.code,{children:"create-timeout"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"3m"})]}),"\n",(0,s.jsxs)(r.p,{children:["Time to wait for a browser container to start. The client will get an HTTP ",(0,s.jsx)(r.code,{children:"504 Gateway Timeout"})," response if this timeout has occurred.\nCan be increased in case browser Pods/Containers take a longer time to start (image pool is slow for example)\nThe value must be in the ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/time#Duration",children:"Go Duration"})," format."]}),"\n",(0,s.jsx)(r.h3,{id:"connect-timeout",children:(0,s.jsx)(r.code,{children:"connect-timeout"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"200ms"})]}),"\n",(0,s.jsxs)(r.p,{children:["Timeout set on connections made to browser containers. Used in browser readiness checks as well as in forwarded Webdriver/Playwright requests.\nConsider increasing it if your network environment has lag issues.\nThe value must be in the ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/time#Duration",children:"Go Duration"})," format."]}),"\n",(0,s.jsx)(r.h2,{id:"browsers-catalog-parameters",children:"Browsers catalog parameters"}),"\n",(0,s.jsx)(r.h3,{id:"browsers-uri",children:(0,s.jsx)(r.code,{children:"browsers-uri"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"config/browsers.yaml"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/configuration/browsers",children:"Browser catalog"})," source to load at startup. Can be either local path ot http(s) URL"]}),"\n",(0,s.jsx)(r.h3,{id:"fallback-browsers-uri",children:(0,s.jsx)(r.code,{children:"fallback-browsers-uri"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"https://selebrow.dev/browsers.yaml"})]}),"\n",(0,s.jsxs)(r.p,{children:["Used when ",(0,s.jsx)(r.a,{href:"/docs/configuration/browsers",children:"Browser catalog"})," couldn't be loaded using source specified in ",(0,s.jsx)(r.a,{href:"#browsers-uri",children:(0,s.jsx)(r.code,{children:"browsers-uri"})})]}),"\n",(0,s.jsx)(r.h2,{id:"kubernetes-parameters",children:"Kubernetes parameters"}),"\n",(0,s.jsx)(r.h3,{id:"create-retries",children:(0,s.jsx)(r.code,{children:"create-retries"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Integer"}),", defaults to ",(0,s.jsx)(r.code,{children:"5"})]}),"\n",(0,s.jsxs)(r.p,{children:["Number of retries for failed Kubernetes Pod create requests before returning HTTP ",(0,s.jsx)(r.code,{children:"504 Internal server error"}),".\nA retry is made whenever the ",(0,s.jsx)(r.code,{children:"Reason"})," field has one of following values in the Kubernetes API response metadata:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"Conflict"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"TooManyRequests"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"InternalError"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"ServerTimeout"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"Timeout"})}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"kube-cluster-mode-out",children:(0,s.jsx)(r.code,{children:"kube-cluster-mode-out"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Boolean"}),", defaults to ",(0,s.jsx)(r.code,{children:"false"})]}),"\n",(0,s.jsxs)(r.p,{children:["Selebrow is expected to run inside a Kubernetes pod, so the Kubernetes client is created using ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/github.com/kubernetes-client/go/kubernetes/config#InClusterConfig",children:"InClusterConfig"})," by default.\nHowever, this is not ideal for development, as you may want to run Selebrow under a debugger. In that case you can set ",(0,s.jsx)(r.code,{children:"kube-cluster-mode-out"})," to ",(0,s.jsx)(r.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["See also ",(0,s.jsx)(r.a,{href:"#kube-config",children:(0,s.jsx)(r.code,{children:"kube-config"})})]}),"\n",(0,s.jsx)(r.h3,{id:"kube-config",children:(0,s.jsx)(r.code,{children:"kube-config"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"$HOME/.kube/config"})]}),"\n",(0,s.jsxs)(r.p,{children:["Kubernetes client config file to use when ",(0,s.jsx)(r.a,{href:"#kube-cluster-mode-out",children:(0,s.jsx)(r.code,{children:"kube-cluster-mode-out"})})," is set to ",(0,s.jsx)(r.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"kube-templates-path",children:(0,s.jsx)(r.code,{children:"kube-templates-path"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"config/"})]}),"\n",(0,s.jsxs)(r.p,{children:["Path to Kubernetes Pod template files. See ",(0,s.jsx)(r.a,{href:"/docs/configuration/templates",children:"templates reference"})," for details."]}),"\n",(0,s.jsx)(r.h3,{id:"namespace",children:(0,s.jsx)(r.code,{children:"namespace"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"default"})]}),"\n",(0,s.jsx)(r.p,{children:"Kubernetes namespace to create browser Pods in."}),"\n",(0,s.jsx)(r.h2,{id:"docker-parameters",children:"Docker parameters"}),"\n",(0,s.jsx)(r.h3,{id:"docker-platform",children:(0,s.jsx)(r.code,{children:"docker-platform"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", not set by default"]}),"\n",(0,s.jsx)(r.p,{children:"Docker platform for browser images."}),"\n",(0,s.jsxs)(r.p,{children:["By default, when looking for browser image, Docker will try to get the native image for the current platform and if that doesn't exist it will fall back to ",(0,s.jsx)(r.code,{children:"amd64"})]}),"\n",(0,s.jsxs)(r.p,{children:["You can override this behaviour by explicitly setting the required platform for browser images. Below are valid examples for\nthe ",(0,s.jsx)(r.code,{children:"docker-platform"})," parameter:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"arm64"})," - Only look for ",(0,s.jsx)(r.code,{children:"linux/arm64"})," images (no fallback to ",(0,s.jsx)(r.code,{children:"amd64"})," will be made)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"linux/arm64"})," same as above"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"docker-network",children:(0,s.jsx)(r.code,{children:"docker-network"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", not set by default"]}),"\n",(0,s.jsx)(r.p,{children:"Docker network to use for browser containers."}),"\n",(0,s.jsx)(r.p,{children:"When this parameter is not set (default), the following algorithm is used:"}),"\n",(0,s.jsxs)(r.p,{children:["If running in ",(0,s.jsx)(r.a,{href:"#docker-port-mapping",children:"port mapping mode"}),", Docker  ",(0,s.jsx)(r.a,{href:"https://docs.docker.com/engine/network/drivers/bridge/#use-the-default-bridge-network",children:"default bridge"})," will be used.\nOtherwise Selebrow will try to detect the current Docker network (assuming Selebrow itself has been started inside a Docker container)"]}),"\n",(0,s.jsx)(r.h3,{id:"docker-port-mapping",children:(0,s.jsx)(r.code,{children:"docker-port-mapping"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"auto"})]}),"\n",(0,s.jsx)(r.p,{children:"Container port mapping mode"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"auto"})," (default)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"enabled"})," - explicitly enabled"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"disabled"})," - explicitly disabled"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["When this parameter is set to ",(0,s.jsx)(r.code,{children:"auto"}),", port mapping mode is set to ",(0,s.jsx)(r.code,{children:"disabled"})," if Selebrow is running inside Docker container itself\nand to ",(0,s.jsx)(r.code,{children:"enabled"})," otherwise."]}),"\n",(0,s.jsx)(r.h3,{id:"docker-privileged",children:(0,s.jsx)(r.code,{children:"docker-privileged"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Boolean"}),", defaults to ",(0,s.jsx)(r.code,{children:"false"})]}),"\n",(0,s.jsxs)(r.p,{children:["Enables ",(0,s.jsx)(r.a,{href:"https://docs.docker.com/reference/cli/docker/container/run/#privileged",children:"privileged"})," mode when running browser Containers.\nIt's not generally recommended to enable this flag. The Selebrow images are built to work in unprivileged mode."]}),"\n",(0,s.jsx)(r.h3,{id:"docker-pull-images",children:(0,s.jsx)(r.code,{children:"docker-pull-images"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Boolean"}),", defaults to ",(0,s.jsx)(r.code,{children:"false"})]}),"\n",(0,s.jsx)(r.p,{children:"By default, Selebrow pulls the browser image upon first request for browser/version. This way only the required images are pulled locally to save storage space at the exchange of a longer first browser request."}),"\n",(0,s.jsxs)(r.p,{children:["When this parameter is set to ",(0,s.jsx)(r.code,{children:"true"}),", Selebrow will pull all images configured in the ",(0,s.jsx)(r.a,{href:"/docs/configuration/browsers",children:"Browser catalog"})," at startup.\nThis is useful for a server installation where you expect low browser startup time."]}),"\n",(0,s.jsx)(r.h2,{id:"browser-limit-and-queue-parameters",children:"Browser limit and queue parameters"}),"\n",(0,s.jsx)(r.h3,{id:"quota-limit",children:(0,s.jsx)(r.code,{children:"quota-limit"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Integer"}),", defaults to ",(0,s.jsx)(r.code,{children:"0"})]}),"\n",(0,s.jsx)(r.p,{children:"The maximum number of simultaneously running browsers."}),"\n",(0,s.jsx)(r.p,{children:"Some values of this parameter are treated specially:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"0"})," (default) automatically calculate limit based on available resources. Currently implemented only for the Docker backend."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"-1"})," unlimited quota"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["The client will get an HTTP ",(0,s.jsx)(r.code,{children:"429 Too Many Requests"})," response if quota is exceeded, unless ",(0,s.jsx)(r.a,{href:"#queue-size",children:"queue-size"})," is set."]}),"\n",(0,s.jsx)(r.h3,{id:"queue-size",children:(0,s.jsx)(r.code,{children:"queue-size"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Integer"}),", defaults to ",(0,s.jsx)(r.code,{children:"25"})]}),"\n",(0,s.jsx)(r.p,{children:"The size of the internal queue of browsers waiting for available quota."}),"\n",(0,s.jsxs)(r.p,{children:["When ",(0,s.jsx)(r.a,{href:"#quota-limit",children:"quota-limit"})," is set to a non negative value and the quota is full,\nany new browser request will be put into an ",(0,s.jsx)(r.code,{children:"internal queue"})," until either quota is available or ",(0,s.jsx)(r.a,{href:"#queue-timeout",children:"queue-timeout"})," is reached.\nThe client will get an HTTP ",(0,s.jsx)(r.code,{children:"429 Too Many Requests"})," response if the queue is full."]}),"\n",(0,s.jsx)(r.h3,{id:"queue-timeout",children:(0,s.jsx)(r.code,{children:"queue-timeout"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"1m"})]}),"\n",(0,s.jsxs)(r.p,{children:["The time a browser can wait for available quota in the browsers queue.\nThe client will get an HTTP ",(0,s.jsx)(r.code,{children:"429 Too Many Requests"})," response if this timeout occurred."]}),"\n",(0,s.jsxs)(r.p,{children:["The value must be in the ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/time#Duration",children:"Go Duration"})," format"]}),"\n",(0,s.jsx)(r.h2,{id:"pool-parameters",children:"Pool parameters"}),"\n",(0,s.jsx)(r.h3,{id:"pool-max-idle",children:(0,s.jsx)(r.code,{children:"pool-max-idle"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Integer"}),", defaults to ",(0,s.jsx)(r.code,{children:"5"})]}),"\n",(0,s.jsxs)(r.p,{children:["Pool size for idle browser containers. When set to ",(0,s.jsx)(r.code,{children:"0"})," the pooling feature is disabled."]}),"\n",(0,s.jsx)(r.h3,{id:"pool-idle-timeout",children:(0,s.jsx)(r.code,{children:"pool-idle-timeout"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"1m"})]}),"\n",(0,s.jsx)(r.p,{children:"The maximum time a browser container can be idle in the pool before eviction."}),"\n",(0,s.jsxs)(r.p,{children:["The value must be in the ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/time#Duration",children:"Go Duration"})," format"]}),"\n",(0,s.jsx)(r.h3,{id:"pool-max-age",children:(0,s.jsx)(r.code,{children:"pool-max-age"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"String"}),", defaults to ",(0,s.jsx)(r.code,{children:"15m"})]}),"\n",(0,s.jsx)(r.p,{children:"If a browser is older than the value specified in this parameter it's unconditionally evicted from the pool (recycled)."}),"\n",(0,s.jsxs)(r.p,{children:["The value must be in the ",(0,s.jsx)(r.a,{href:"https://pkg.go.dev/time#Duration",children:"Go Duration"})," format"]}),"\n",(0,s.jsx)(r.h2,{id:"ui-parameters",children:"UI parameters"}),"\n",(0,s.jsx)(r.h3,{id:"ui",children:(0,s.jsx)(r.code,{children:"ui"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Boolean"}),", defaults to ",(0,s.jsx)(r.code,{children:"true"})]}),"\n",(0,s.jsx)(r.p,{children:"The UI is enabled by default unless Selebrow was started in a CI environment."}),"\n",(0,s.jsx)(r.h3,{id:"vnc-password",children:(0,s.jsx)(r.code,{children:"vnc-password"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"String"})}),"\n",(0,s.jsxs)(r.p,{children:["The VNC password to be used for connecting to browsers via the UI. The default value matches the default password in Selebrow images, which is ",(0,s.jsx)(r.code,{children:"selebrow"}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"logging-parameters",children:"Logging parameters"}),"\n",(0,s.jsx)(r.p,{children:"Since logging is inititalized very early at startup, it can only be configured with environment variables,\nthere are no corresponding command line parameters."}),"\n",(0,s.jsx)(r.h3,{id:"sb_log_level",children:(0,s.jsx)(r.code,{children:"SB_LOG_LEVEL"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"String"})}),"\n",(0,s.jsx)(r.p,{children:"Log level to use. Allowed values are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"debug"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"info"})," (default)"]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"warn"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"error"})}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"sb_log_format",children:(0,s.jsx)(r.code,{children:"SB_LOG_FORMAT"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"String"})}),"\n",(0,s.jsx)(r.p,{children:"Log format:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"json"})," - structured logging in json format (automatically enabled when Selebrow is run in Kubernetes)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"console"})," - human-readable console logs (default). Color output is enabled when running in terminal."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"sb_log_output",children:(0,s.jsx)(r.code,{children:"SB_LOG_OUTPUT"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"String"})}),"\n",(0,s.jsxs)(r.p,{children:["Log output file/stream. Default is ",(0,s.jsx)(r.code,{children:"stdout"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>d});var i=n(6540);const s={},l=i.createContext(s);function o(e){const r=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:r},e.children)}}}]);